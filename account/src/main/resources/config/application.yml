server:
  port: 8080
spring:
  application:
    name: account
  profiles:
    active: prod
  datasource:
    url: jdbc:postgresql://localhost:5432/accountdb
    username: easybank
    password: root
  liquibase:
    change-log: classpath:config/liquibase/master.xml
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    open-in-view: false
  config:
    import: optional:configserver:http://localhost:8071/
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 10s
  kafka:
    bootstrap-servers: http://localhost:9092
  cloud:
    kubernetes:
      discovery:
        all-namespaces: true
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
    enabled: false


endpoints:
  shutdown:
    enabled: true

#eureka:
#  instance:
#    preferIpAddress: true
#  client:
#    fetchRegistry: true
#    registerWithEureka: true
#    serviceUrl:
#      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "account"
    description: "Eazy Bank Account Application"
    version: "1.0.0"

logging:
  level:
    io:
      github:
        susimsek:
          account: DEBUG
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1


