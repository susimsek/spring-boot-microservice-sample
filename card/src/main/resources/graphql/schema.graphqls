directive @NotBlank(message : String = "graphql.validation.NotBlank.message") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @Size(min : Int = 0, max : Int = 2147483647, message : String = "graphql.validation.Size.message") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @Email(message : String = "graphql.validation.Email.message") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @Pattern(regexp : String! =".*", message : String = "graphql.validation.Pattern.message") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @Max(value : Int! = 2147483647, message : String = "graphql.validation.Max.message") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION
directive @Min(value : Int! = 0, message : String = "graphql.validation.Min.message") on ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

scalar DateTime

type Query {
    card(mobileNumber: String! @NotBlank @Pattern(regexp: "(^$|\\d{10})")): CardDTO!
    cards(first: Int,last: Int,before: String,after: String): CardDTOConnection!
}

type Mutation {
    createCard(mobileNumber: String! @NotBlank @Pattern(regexp: "(^$|\\d{10})")): CardDTO!
    deleteCard(mobileNumber: String! @NotBlank @Pattern(regexp: "(^$|\\d{10})")): String!
}

type Subscription {
    onNewCard: CardDTO!
}

type CardDTO{
    mobileNumber: String!
    cardNumber: String!
    cardType: String!
    totalLimit: Int!
    amountUsed: Int!
    availableAmount: Int!
}