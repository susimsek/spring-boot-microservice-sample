CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

** Please be patient while the chart is being deployed **

Debezium connect can be accessed through the following DNS name from within your cluster:

    {{ include "debezium.fullname" . }}.{{ include "debezium.namespace" . }}.svc.{{ .Values.clusterDomain }} (port {{ coalesce .Values.service.ports.http .Values.service.port }})

To access Debezium from outside the cluster execute the following commands:

{{- if .Values.ingress.enabled }}

1. Get the Debezium URL and associate its hostname to your cluster external IP:

   export CLUSTER_IP=$(minikube ip) # On Minikube. Use: `kubectl cluster-info` on others K8s clusters
   echo "Debezium URL: http{{ if .Values.ingress.tls }}s{{ end }}://{{ (tpl .Values.ingress.hostname .) }}/"
   echo "$CLUSTER_IP  {{ (tpl .Values.ingress.hostname .) }}" | sudo tee -a /etc/hosts

{{- else }}

1. Get the Debezium URL by running these commands:

{{- if contains "NodePort" .Values.service.type }}

    export HTTP_NODE_PORT=$(kubectl get --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.spec.ports[?(@.name=='http')].nodePort}" services {{ include "debezium.fullname" . }})
    {{- if .Values.tls.enabled }}
    export HTTPS_NODE_PORT=$(kubectl get --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.spec.ports[?(@.name=='https')].nodePort}" services {{ include "debezium.fullname" . }})
    {{- end }}
    export NODE_IP=$(kubectl get nodes --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")

    echo "http://${NODE_IP}:${HTTP_NODE_PORT}/"
    {{- if .Values.tls.enabled }}
    echo "https://${NODE_IP}:${HTTPS_NODE_PORT}/"
    {{- end }}

{{- else if contains "LoadBalancer" .Values.service.type }}

  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch its status by running 'kubectl get --namespace {{ include "debezium.namespace" . }} svc -w {{ include "debezium.fullname" . }}'

    export HTTP_SERVICE_PORT=$(kubectl get --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.spec.ports[?(@.name=='http')].port}" services {{ include "debezium.fullname" . }})
    {{- if .Values.tls.enabled }}
    export HTTPS_SERVICE_PORT=$(kubectl get --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.spec.ports[?(@.name=='https')].port}" services {{ include "debezium.fullname" . }})
    {{- end }}
    export SERVICE_IP=$(kubectl get svc --namespace {{ include "debezium.namespace" . }} {{ include "debezium.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')

    echo "http://${SERVICE_IP}:${HTTP_SERVICE_PORT}/"
    {{- if .Values.tls.enabled }}
    echo "https://${SERVICE_IP}:${HTTPS_SERVICE_PORT}/"
    {{- end }}

{{- else if contains "ClusterIP" .Values.service.type }}

    export HTTP_SERVICE_PORT=$(kubectl get --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.spec.ports[?(@.name=='http')].port}" services {{ include "debezium.fullname" . }})
    {{- if .Values.tls.enabled }}
    export HTTPS_SERVICE_PORT=$(kubectl get --namespace {{ include "debezium.namespace" . }} -o jsonpath="{.spec.ports[?(@.name=='https')].port}" services {{ include "debezium.fullname" . }})
    kubectl port-forward --namespace {{ include "debezium.namespace" . }} svc/{{ include "debezium.fullname" . }} ${HTTP_SERVICE_PORT}:${HTTP_SERVICE_PORT} ${HTTPS_SERVICE_PORT}:${HTTPS_SERVICE_PORT} &
    {{- else }}
    kubectl port-forward --namespace {{ include "debezium.namespace" . }} svc/{{ include "debezium.fullname" . }} ${HTTP_SERVICE_PORT}:${HTTP_SERVICE_PORT} &
    {{- end }}

    echo "http://127.0.0.1:${HTTP_SERVICE_PORT}/"
    {{- if .Values.tls.enabled }}
    echo "https://127.0.0.1:${HTTPS_SERVICE_PORT}/"
    {{- end }}

{{- end }}
{{- end }}